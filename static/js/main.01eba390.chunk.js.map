{"version":3,"sources":["components/Number.js","components/Operator.js","utils.js","components/CalculatorBoard.js","components/TextInput.js","components/Calculator.js","index.js"],"names":["Number","value","onClick","className","e","target","Operator","currentValue","symbol","isErr","disabled","calculate","a","b","op","CalculatorBoard","setCurrentValue","nextValue","setNextValue","operator","setOperator","isResult","setIsResult","setHasSubmitted","onOperatorClick","onNumberClick","parseInt","id","map","TextInput","onInputSubmit","onChange","onSubmit","preventDefault","type","Calculator","useState","hasSubmitted","result","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01eba390.chunk.js","sourcesContent":["function Number({ value, onClick }) {\r\n  return (\r\n    <button\r\n      className=\"number\"\r\n      value={value}\r\n      onClick={(e) => onClick(e.target.value)}\r\n    >\r\n      {value}\r\n    </button>\r\n  )\r\n}\r\nexport { Number }\r\n","function Operator({ currentValue, onClick, symbol }) {\r\n  const isErr = currentValue === \"Err\" ? true : false\r\n  return (\r\n    <button disabled={isErr} onClick={() => onClick(symbol)}>\r\n      {symbol}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport { Operator }\r\n","const calculate = (a, b, op) => {\r\n  switch (op) {\r\n    case \"+\":\r\n      return a + b\r\n    case \"-\":\r\n      return a - b\r\n    case \"/\":\r\n      return b === 0 ? \"Err\" : a / b\r\n    case \"*\":\r\n      return a === 0 && b === 0 ? \"Err\" : a * b\r\n    default:\r\n    // do nothing\r\n  }\r\n}\r\nexport { calculate }\r\n","import { Number } from \"./Number\"\r\nimport { Operator } from \"./Operator\"\r\nimport { calculate } from \"../utils\"\r\nfunction CalculatorBoard({\r\n  currentValue,\r\n  setCurrentValue,\r\n  nextValue,\r\n  setNextValue,\r\n  operator,\r\n  setOperator,\r\n  isResult,\r\n  setIsResult,\r\n  setHasSubmitted,\r\n}) {\r\n  const onOperatorClick = (op) => {\r\n    if (currentValue === \"Err\") {\r\n      return\r\n    }\r\n    if (operator != null) {\r\n      setCurrentValue(calculate(currentValue, nextValue, operator))\r\n      setNextValue(0)\r\n    }\r\n    setOperator(op)\r\n    setHasSubmitted(false)\r\n  }\r\n  const onNumberClick = (target) => {\r\n    if (isResult) {\r\n      setHasSubmitted(false)\r\n      if (operator == null) {\r\n        setCurrentValue(parseInt(target))\r\n      } else {\r\n        setNextValue(parseInt(nextValue + target))\r\n      }\r\n      setIsResult(false)\r\n      return\r\n    }\r\n    setHasSubmitted(false)\r\n    if (operator == null) {\r\n      setCurrentValue(parseInt(currentValue + target))\r\n    } else {\r\n      setNextValue(parseInt(nextValue + target))\r\n    }\r\n  }\r\n  const resetCalculator = () => {\r\n    setCurrentValue(0)\r\n    setNextValue(0)\r\n    setOperator(null)\r\n    setIsResult(false)\r\n  }\r\n  return (\r\n    <div id=\"board\">\r\n      <div id=\"numbers\">\r\n        {[\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\"].map((value) => (\r\n          <Number key={value} value={value} onClick={onNumberClick} />\r\n        ))}\r\n        <button id=\"canc\" onClick={resetCalculator}>\r\n          C\r\n        </button>\r\n        <Number value=\"0\" onClick={onNumberClick} />\r\n      </div>\r\n      <div className=\"operations\">\r\n        {[\"+\", \"-\", \"*\", \"/\"].map((symbol) => (\r\n          <Operator\r\n            currentValue={currentValue}\r\n            key={symbol}\r\n            onClick={onOperatorClick}\r\n            symbol={symbol}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport { CalculatorBoard }\r\n","function TextInput({\r\n  currentValue,\r\n  nextValue,\r\n  operator,\r\n  onInputSubmit,\r\n  onChange,\r\n}) {\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault()\r\n        onInputSubmit()\r\n      }}\r\n    >\r\n      <div id=\"current-operation\">\r\n        <p>\r\n          {operator == null\r\n            ? \"\"\r\n            : currentValue + \" \" + operator + \" \" + nextValue}\r\n        </p>\r\n      </div>\r\n      <div id=\"inputbar\">\r\n        <input\r\n          id=\"textinput\"\r\n          type=\"text\"\r\n          value={operator == null ? currentValue : nextValue}\r\n          onChange={(e) => onChange(parseInt(e.target.value))}\r\n        ></input>\r\n        <input id=\"submit\" type=\"submit\" value=\"=\" />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nexport { TextInput }\r\n","import { useState } from \"react\"\r\n\r\nimport { CalculatorBoard } from \"./CalculatorBoard\"\r\nimport { TextInput } from \"./TextInput\"\r\n\r\nimport { calculate } from \"../utils\"\r\n\r\nfunction Calculator() {\r\n  const [currentValue, setCurrentValue] = useState(0)\r\n  const [nextValue, setNextValue] = useState(0)\r\n  const [operator, setOperator] = useState(null)\r\n  const [isResult, setIsResult] = useState(false)\r\n  const [hasSubmitted, setHasSubmitted] = useState(false)\r\n  const result = calculate(currentValue, nextValue, operator)\r\n  console.log({ operator, currentValue, nextValue, result })\r\n  return (\r\n    <div id=\"calculator\">\r\n      <TextInput\r\n        currentValue={currentValue}\r\n        setCurrentValue={setCurrentValue}\r\n        nextValue={nextValue}\r\n        setNextValue={setNextValue}\r\n        operator={operator}\r\n        setOperator={setOperator}\r\n        onInputSubmit={() => {\r\n          if (!hasSubmitted) {\r\n            setCurrentValue(result)\r\n            setNextValue(0)\r\n            setOperator(null)\r\n            setIsResult(true)\r\n            setHasSubmitted(true)\r\n          }\r\n        }}\r\n        onChange={(value) => {\r\n          if (operator == null) {\r\n            setCurrentValue(value)\r\n          } else {\r\n            setNextValue(value)\r\n          }\r\n        }}\r\n      />\r\n      <CalculatorBoard\r\n        currentValue={currentValue}\r\n        setCurrentValue={setCurrentValue}\r\n        nextValue={nextValue}\r\n        setNextValue={setNextValue}\r\n        operator={operator}\r\n        setOperator={setOperator}\r\n        isResult={isResult}\r\n        setIsResult={setIsResult}\r\n        setHasSubmitted={setHasSubmitted}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport { Calculator }\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Calculator } from \"./components/Calculator\"\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(<Calculator />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}